// Respostas scriptadas com base em palavras-chave
const responses = {
    servi√ßo: {
      text: `Trazer velocidade para o seu neg√≥cio √© dif√≠cil n√©.
  Minutos e horas de trabalho perdidas fazendo planilhas, arrumando erros e at√© tendo o trabalho de envi√°-las manualmente. üò©
  Mas veja, no mundo digital sempre h√° uma solu√ß√£o, sempre h√° um jeito de trazer mais agilidade, automatizar processos chatos e, acima disso, ganhar o precioso tempo seu e de seus funcion√°rios. ‚è≥
  Quer conquistar o 100% da sua equipe?`,
      quickReplies: [
        { content_type: 'text', title: 'SIM', payload: 'SIM' },
        { content_type: 'text', title: 'N√ÉO', payload: 'NAO' },
      ],
      nextState: 'esperando_confirmacao',
    },
    
    despedida: {
      text: 'Entendo, obrigado pelo seu tempo! Se precisar de algo no futuro, estaremos por aqui. At√© mais! üëã',
    },
    
    apresentacao: {
      text: `√ìtimo! üéâ Vamos mostrar como podemos ajudar sua equipe a ser mais produtiva e automatizar processos.
  Nosso servi√ßo √© especializado em automa√ß√µes que economizam tempo e reduzem erros. Posso te enviar uma apresenta√ß√£o detalhada?`,
      quickReplies: [
        { content_type: 'text', title: 'APRESENTAR', payload: 'APRESENTAR' },
        { content_type: 'text', title: 'SAIR', payload: 'SAIR' },
      ],
      nextState: 'apresentando',
    },
    
    default: {
      text: 'Desculpe, n√£o entendi. Voc√™ pode reformular sua pergunta?',
    },
  };
  
  // Fun√ß√£o para obter a resposta com base no texto da mensagem
  function getScriptedResponse(messageText, userState) {
    const loweredText = messageText.toLowerCase();
  
    if (userState === 'esperando_confirmacao') {
      if (loweredText.includes('sim')) {
        return { response: responses.apresentacao.text, quickReplies: responses.apresentacao.quickReplies, nextState: 'apresentando' };
      } else if (loweredText.includes('nao')) {
        return { response: responses.despedida.text, nextState: 'finalizado' };
      }
    }
  
    if (userState === 'apresentando' && loweredText.includes('apresentar')) {
      return { response: 'Aqui est√° nossa apresenta√ß√£o completa: [link para apresenta√ß√£o]. Se tiver d√∫vidas, estamos √† disposi√ß√£o!', nextState: 'finalizado' };
    }
  
    if (loweredText.includes('servi√ßo')) {
      return { response: responses.servi√ßo.text, quickReplies: responses.servi√ßo.quickReplies, nextState: 'esperando_confirmacao' };
    }
  
    return { response: responses.default.text };
  }
  
  module.exports = { getScriptedResponse };
  